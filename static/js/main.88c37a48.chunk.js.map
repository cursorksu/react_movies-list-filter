{"version":3,"sources":["components/SearchBar/SearchBar.js","components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","App.js","index.js"],"names":["SearchBar","onChange","className","htmlFor","type","id","placeholder","defaultProps","MovieCard","title","description","imgUrl","imdbUrl","src","alt","href","MoviesList","movies","searchValue","moviesFiltered","filter","toLowerCase","includes","map","movie","key","imdbId","App","state","handleSearch","e","setState","target","value","this","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"wxEAIaA,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,yBAAKC,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOC,QAAQ,eAAeD,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACED,SAAUA,EACVG,KAAK,OACLC,GAAG,eACHH,UAAU,QACVI,YAAY,0BAWtBN,EAAUO,aAAe,CACvBN,SAAU,c,gBCzBCO,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKV,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEW,IAAKF,EACLG,IAAI,gBAIV,yBAAKZ,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEW,IAAI,wBACJC,IAAI,WAIV,yBAAKZ,UAAU,iBACb,uBAAGA,UAAU,cAAcO,KAI/B,yBAAKP,UAAU,WACZQ,EACD,6BACA,uBAAGK,KAAMH,GAAT,YAaRJ,EAAUD,aAAe,CACvBG,YAAa,ICxCR,IAAMM,EAAa,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAC/BC,EAAiB,GAYrB,OAVID,IACFC,EAAiBF,EACdG,QAAO,gBAAGX,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OAA4BD,EACjCY,cACAC,SAASJ,IACPR,EACAW,cACAC,SAASJ,OAIhB,yBAAKhB,UAAU,UACZgB,EACIC,EAAeI,KAAI,SAAAC,GAAK,OACzB,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,OAEjCP,EAAOM,KAAI,SAAAC,GAAK,OACjB,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAmB5CR,EAAWT,aAAe,CACxBU,OAAQ,GACRC,YAAa,I,WCzCFS,EAAb,2MACEC,MAAQ,CACNV,YAAa,IAFjB,EAKEW,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEb,YAAaY,EAAEE,OAAOC,MAAMZ,iBANhD,wEASY,IAAD,OACCH,EAAgBgB,KAAKN,MAArBV,YAER,OACE,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAWD,SAAW,SAAA6B,GAAC,OAAI,EAAKD,aAAaC,MAC7C,kBAAC,EAAD,CAAYb,OAAQkB,EAAkBjB,YAAaA,KAErD,yBAAKhB,UAAU,WAAf,0BAlBR,GAAyBkC,aCDzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.88c37a48.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchBar.scss';\n\nexport const SearchBar = ({ onChange }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n        />\n      </div>\n    </div>\n  </div>\n);\n\nSearchBar.propTypes = {\n  onChange: PropTypes.func,\n};\n\nSearchBar.defaultProps = {\n  onChange: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies, searchValue }) => {\n  let moviesFiltered = [];\n\n  if (searchValue) {\n    moviesFiltered = movies\n      .filter(({ title, description }) => title\n        .toLowerCase()\n        .includes(searchValue)\n        || description\n          .toLowerCase()\n          .includes(searchValue));\n  }\n\n  return (\n    <div className=\"movies\">\n      {searchValue\n        ? (moviesFiltered.map(movie => (\n          <MovieCard key={movie.imdbId} {...movie} />\n        )))\n        : (movies.map(movie => (\n          <MovieCard key={movie.imdbId} {...movie} />\n        )))\n      }\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  searchValue: PropTypes.string,\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n  searchValue: '',\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { SearchBar } from './components/SearchBar';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    searchValue: '',\n  };\n\n  handleSearch = (e) => {\n    this.setState({ searchValue: e.target.value.toLowerCase() });\n  }\n\n  render() {\n    const { searchValue } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <SearchBar onChange={(e => this.handleSearch(e))} />\n          <MoviesList movies={moviesFromServer} searchValue={searchValue} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}